@using Microsoft.AspNetCore.Identity
@using Walton_Happy_Travel.Models

@inject SignInManager<ApplicationUser> SignInManager
@inject UserManager<ApplicationUser> UserManager

@if (SignInManager.IsSignedIn(User))
{
    <form asp-action="Logout" asp-controller="Account" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })" method="post" id="logoutForm" class="navbar-right">
        <ul class="nav navbar-nav navbar-right">
            <li class="nav-item dropdown">
                <a class="nav-link dropdown-toggle" href="#" id="navbarDropdown" role="button" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                    Hello @UserManager.GetUserName(User)!
                </a>
                <div class="dropdown-menu" aria-labelledby="navbarDropdown">
                    @Html.ActionLink("View Account", "Index", "Manage", routeValues: null, htmlAttributes: new { title = "Manage", @class = "dropdown-item" })
                    <a class="dropdown-item" href="#">View Bookings</a>
                </div>
            </li>
            <li class="nav-item">
                <button type="submit" class="btn btn-link navbar-btn navbar-link nav-link">Logout</button>
            </li>
        </ul>
    </form>
}
else
{
    <ul class="nav navbar-nav navbar-collapse justify-content-end">
        <li class="nav-item">@Html.ActionLink("Register", "Register", "Account", null, new { @class = "nav-link"})</li>
        <li class="nav-item">@Html.ActionLink("Login", "Login", "Account", null, new { @class = "nav-link"})</li>
    </ul>
}
